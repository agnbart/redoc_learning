{"swagger": "2.0", "info": {"title": "Deor API", "description": "Deor API Docs", "termsOfService": "https://www.google.com/policies/terms/", "contact": {"email": "it@deor.co"}, "license": {"name": "BSD License"}, "x-logo": {"url": "https://deor.co/blog/wp-content/uploads/2022/02/deor-blue-423-202.png", "backgroundColor": "#FFFFFF"}, "version": "v1"}, "host": "api.deor.co", "schemes": ["https"], "basePath": "/api/v1", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Basic": {"type": "basic"}}, "security": [{"Basic": []}], "paths": {"/analytics/entity/": {"post": {"operationId": "Add entity to user", "description": "Adding entity to user visited entry", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/EntityVisited"}}], "responses": {"200": {"description": "Created"}}, "tags": ["analytics"]}, "parameters": []}, "/animals": {"get": {"operationId": "animals_list", "summary": "Get Animal species", "description": "Return All species of animals.", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Animal"}}}}}}, "tags": ["animals"]}, "parameters": []}, "/animals/weights": {"get": {"operationId": "animals_weights_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["animals"]}, "parameters": []}, "/animals/{animal_id}/avatar/{animal_photo_id}": {"delete": {"operationId": "Delete animal avatar", "description": "Deleting animal avatar", "parameters": [], "responses": {"404": {"description": "Image or animal not found"}, "200": {"description": "Success, image added"}}, "tags": ["animals"]}, "parameters": [{"name": "animal_id", "in": "path", "required": true, "type": "string"}, {"name": "animal_photo_id", "in": "path", "required": true, "type": "string"}]}, "/animals/{animal_id}/image/{animal_photo_id}": {"delete": {"operationId": "Delete animal photo", "description": "Deleting animal image", "parameters": [], "responses": {"404": {"description": "Image or animal not found"}, "200": {"description": "Success, image added"}}, "tags": ["animals"]}, "parameters": [{"name": "animal_id", "in": "path", "required": true, "type": "string"}, {"name": "animal_photo_id", "in": "path", "required": true, "type": "string"}]}, "/animals/{id}/avatar": {"post": {"operationId": "Add animal avatar", "description": "Adding animal avatar", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AnimalAvatar"}}], "responses": {"404": {"description": "Image or animal not found"}, "200": {"description": "Image has been added"}}, "tags": ["animals"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/animals/{id}/breeds": {"get": {"operationId": "animals_breeds_list", "summary": "Animals breeds", "description": "Returns list of animal's breeds", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/AnimalBreed"}}}}}}, "tags": ["animals"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this animal breed.", "required": true, "type": "integer"}]}, "/animals/{id}/colors": {"get": {"operationId": "animals_colors_list", "summary": "Animals colors", "description": "Returns list of all animal's colors", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/AnimalColor"}}}}}}, "tags": ["animals"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this animal color.", "required": true, "type": "integer"}]}, "/animals/{id}/image": {"post": {"operationId": "Add animal image", "description": "Adding animal image", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AnimalImg"}}], "responses": {"404": {"description": "Image or animal not found"}, "200": {"description": "Image has been added"}}, "tags": ["animals"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/animals/{id}/myAnimals": {"get": {"operationId": "animals_myAnimals_list", "description": "", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/AnimalMyAnimals"}}}}}}, "tags": ["animals"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this my animal.", "required": true, "type": "integer"}]}, "/animals/{id}/sexes": {"get": {"operationId": "animals_sexes_list", "summary": "Animals sex", "description": "Returns list of animal's sex", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/AnimalSex"}}}}}}, "tags": ["animals"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this animal sex.", "required": true, "type": "integer"}]}, "/answerQuestions/{id}": {"post": {"operationId": "answerQuestions_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AnswerQuestions"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/AnswerQuestions"}}}, "tags": ["answerQuestions"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/answers/{id}": {"get": {"operationId": "answers_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/AnswerDetail"}}}, "tags": ["answers"]}, "put": {"operationId": "answers_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AnswerDetail"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/AnswerDetail"}}}, "tags": ["answers"]}, "patch": {"operationId": "answers_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AnswerDetail"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/AnswerDetail"}}}, "tags": ["answers"]}, "delete": {"operationId": "answers_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["answers"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this answer.", "required": true, "type": "integer"}]}, "/answers/{id}/reportAnswer": {"post": {"operationId": "answers_reportAnswer_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ReportAnswer"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ReportAnswer"}}}, "tags": ["answers"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/answers/{id}/vote": {"post": {"operationId": "answers_vote_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AnswerPointsHistory"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/AnswerPointsHistory"}}}, "tags": ["answers"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/askQuestions": {"post": {"operationId": "askQuestions_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AskQuestion"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/AskQuestion"}}}, "tags": ["askQuestions"]}, "parameters": []}, "/blogs/latest-articles": {"get": {"operationId": "blogs_latest-articles_list", "description": "Get 5 latest blog articles", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["blogs"]}, "parameters": []}, "/blogs/{name}": {"get": {"operationId": "blogs_read", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["blogs"]}, "parameters": [{"name": "name", "in": "path", "required": true, "type": "string"}]}, "/blogs/{name}/{module}": {"get": {"operationId": "blogs_read", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["blogs"]}, "parameters": [{"name": "module", "in": "path", "required": true, "type": "string"}, {"name": "name", "in": "path", "required": true, "type": "string"}]}, "/brands": {"get": {"operationId": "brands_list", "summary": "Listing Brands", "description": "Get all brands or filter them by name/slug or by products in specific category.", "parameters": [{"name": "category_parent", "in": "query", "description": "Type parent category slug", "required": false, "type": "string"}, {"name": "category_child", "in": "query", "description": "Type child category slug", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Brand"}}}}}}, "tags": ["brands"]}, "parameters": []}, "/brands/add": {"post": {"operationId": "Create new brand", "description": "Create new product brand in deor database. Authorization required.Required fields: name of the brand", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": ["name", "product_producer"], "type": "object", "properties": {"name": {"description": "Name of the brand", "type": "string", "default": "Name"}, "description": {"description": "Brand description", "type": "string", "default": "Description body"}, "logo": {"description": "Brand logo", "type": "string", "default": "Logo url"}, "url": {"description": "Brand url", "type": "string", "default": "Brand url"}, "product_producer": {"description": "Product Producer pk", "type": "integer", "default": 1}}}}], "responses": {"404": {"description": "Brand logo not found"}, "200": {"description": "Brand has been added"}}, "tags": ["brands"]}, "parameters": []}, "/brands/search": {"get": {"operationId": "brands_search_list", "summary": "Search for Brand", "description": "Search for brand in deor database by it's name, returns all brands with matching string.", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Brand"}}}}}}, "tags": ["brands"]}, "parameters": []}, "/brands/{id}/delete": {"delete": {"operationId": "brands_delete_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["brands"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this brand.", "required": true, "type": "integer"}]}, "/brands/{id}/update": {"put": {"operationId": "brands_update_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/BrandDeleteOrUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/BrandDeleteOrUpdate"}}}, "tags": ["brands"]}, "patch": {"operationId": "brands_update_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/BrandDeleteOrUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/BrandDeleteOrUpdate"}}}, "tags": ["brands"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this brand.", "required": true, "type": "integer"}]}, "/brands/{slug}": {"get": {"operationId": "brands_read", "summary": "Brand details", "description": "Get details about the brand by the slug.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Brand"}}}, "tags": ["brands"]}, "parameters": [{"name": "slug", "in": "path", "required": true, "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$"}]}, "/brands/{slug}/AddReview": {"post": {"operationId": "brands_AddReview_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/BrandReviewCreate"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/BrandReviewCreate"}}}, "tags": ["brands"]}, "parameters": [{"name": "slug", "in": "path", "required": true, "type": "string"}]}, "/brands/{slug}/categories": {"get": {"operationId": "brands_categories_list", "summary": "Brand detail view", "description": "Returns brand detail view with product categories", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Brand"}}}}}}, "tags": ["brands"]}, "parameters": [{"name": "slug", "in": "path", "required": true, "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$"}]}, "/brands/{slug}/featured-products": {"get": {"operationId": "brands_featured-products_list", "summary": "Brand featured products", "description": "Return all featured products of given brand (by brand slug).", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/ProductInStore"}}}}}}, "tags": ["brands"]}, "parameters": [{"name": "slug", "in": "path", "required": true, "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$"}]}, "/brands/{slug}/products": {"get": {"operationId": "brands_products_list", "summary": "Brand products", "description": "Return all products of given brand (by brand slug).", "parameters": [{"name": "category_parent", "in": "query", "description": "Type parent category slug", "required": false, "type": "string"}, {"name": "category_child", "in": "query", "description": "Type child category slug", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/ProductInStore"}}}}}}, "tags": ["brands"]}, "parameters": [{"name": "slug", "in": "path", "required": true, "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$"}]}, "/brands/{slug}/reviews": {"get": {"operationId": "brands_reviews_list", "summary": "Brand reviews", "description": "Return all reviews of the brand (by brand slug).", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/BrandReview"}}}}}}, "tags": ["brands"]}, "parameters": [{"name": "slug", "in": "path", "required": true, "type": "string"}]}, "/brands/{slug}/reviews/{id}/reportReview": {"post": {"operationId": "brands_reviews_reportReview_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ReportBrandReview"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ReportBrandReview"}}}, "tags": ["brands"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}, {"name": "slug", "in": "path", "required": true, "type": "string"}]}, "/breed/add": {"post": {"operationId": "Create new breed", "description": "Create new animal breed.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": ["name", "animal"], "type": "object", "properties": {"name": {"description": "Name of the breed", "type": "string", "default": "name"}, "animal": {"description": "A unique integer value identifying animal.", "type": "integer", "default": 1}}}}], "responses": {"406": {"description": "Breed exists"}, "201": {"description": "Breed created"}}, "tags": ["breed"]}, "parameters": []}, "/categories": {"get": {"operationId": "categories_list", "summary": "Categories Tree", "description": "Returns List of all Categories. Possible to set order by fields: name or slug", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/ProductCategory"}}}}}}, "tags": ["categories"]}, "parameters": []}, "/categories/products": {"get": {"operationId": "categories_products_list", "summary": "Categories Tree", "description": "Returns List of all Categories. Possible to set order by fields: name or slug", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/ProductCategory"}}}}}}, "tags": ["categories"]}, "parameters": []}, "/categories/search": {"get": {"operationId": "Categories by name", "description": "Returns Categories by name of parent category (typed in search field). Example query: /api/v1/categories/search?parent=konie", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "parent", "in": "query", "description": "Parent category slug", "type": "string"}], "responses": {"200": {"description": "Ok"}}, "tags": ["categories"]}, "parameters": []}, "/categories/specialists/{id}": {"get": {"operationId": "categories_specialists_read", "summary": "Specialists Category details", "description": "Returns list of specialists for specific category. Searching by category slug.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SpecialistCategory"}}}, "tags": ["categories"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this category.", "required": true, "type": "integer"}]}, "/categories/{id}": {"get": {"operationId": "categories_read", "summary": "Category by id", "description": "Returns Category with given id", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ProductCategory"}}}, "tags": ["categories"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this ecommerce product category.", "required": true, "type": "integer"}]}, "/categories/{id}/products": {"get": {"operationId": "categories_products_list", "summary": "Products by category", "description": "Return products by given category (category id)", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/ProductInStore"}}}}}}, "tags": ["categories"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this product in store.", "required": true, "type": "integer"}]}, "/categories/{slug}": {"get": {"operationId": "categories_read", "summary": "Category by slug", "description": "Returns Category with given slug", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ProductCategory"}}}, "tags": ["categories"]}, "parameters": [{"name": "slug", "in": "path", "required": true, "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$"}]}, "/cities": {"get": {"operationId": "cities_list", "summary": "Get Cities", "description": "Return All cities in deor database ordered by id.", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/CityList"}}}}}}, "tags": ["cities"]}, "parameters": []}, "/cities/add": {"post": {"operationId": "cities_add_create", "description": "check if request user is superuser", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CityCreate"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/CityCreate"}}}, "tags": ["cities"]}, "parameters": []}, "/cities/search": {"get": {"operationId": "cities_search_list", "summary": "Search for City", "description": "Search for city in deor database by it's name, returns all cities with matching string.", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/CityList"}}}}}}, "tags": ["cities"]}, "parameters": []}, "/cities/{id}/update": {"put": {"operationId": "cities_update_update", "description": "check if request user is superuser", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CityCreate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CityCreate"}}}, "tags": ["cities"]}, "patch": {"operationId": "cities_update_partial_update", "description": "check if request user is superuser", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CityCreate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CityCreate"}}}, "tags": ["cities"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this city.", "required": true, "type": "integer"}]}, "/cities/{slug}": {"get": {"operationId": "cities_read", "summary": "City Details", "description": "Return details about the city by it's slug.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CityList"}}}, "tags": ["cities"]}, "parameters": [{"name": "slug", "in": "path", "required": true, "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$"}]}, "/digitalTwins": {"get": {"operationId": "digitalTwins_list", "description": "", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/DigitalTwin"}}}}}}, "tags": ["digitalTwins"]}, "parameters": []}, "/digitalTwins/{uuid}/docs": {"get": {"operationId": "digitalTwins_docs_list", "description": "", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Doc"}}}}}}, "tags": ["digitalTwins"]}, "parameters": [{"name": "uuid", "in": "path", "required": true, "type": "string"}]}, "/digitalTwins/{uuid}/entries": {"get": {"operationId": "digitalTwins_entries_list", "description": "", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Entry"}}}}}}, "tags": ["digitalTwins"]}, "parameters": [{"name": "uuid", "in": "path", "required": true, "type": "string"}]}, "/digitalTwins/{uuid}/entries/add": {"post": {"operationId": "digitalTwins_entries_add_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Entry"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Entry"}}}, "tags": ["digitalTwins"]}, "parameters": [{"name": "uuid", "in": "path", "required": true, "type": "string"}]}, "/digitalTwins/{uuid}/entries/{id}": {"get": {"operationId": "digitalTwins_entries_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Entry"}}}, "tags": ["digitalTwins"]}, "put": {"operationId": "digitalTwins_entries_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Entry"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Entry"}}}, "tags": ["digitalTwins"]}, "patch": {"operationId": "digitalTwins_entries_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Entry"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Entry"}}}, "tags": ["digitalTwins"]}, "delete": {"operationId": "digitalTwins_entries_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["digitalTwins"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this entry.", "required": true, "type": "integer"}, {"name": "uuid", "in": "path", "required": true, "type": "string"}]}, "/digitalTwins/{uuid}/identities": {"get": {"operationId": "digitalTwins_identities_list", "description": "", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Identity"}}}}}}, "tags": ["digitalTwins"]}, "parameters": [{"name": "uuid", "in": "path", "required": true, "type": "string"}]}, "/digitalTwins/{uuid}/identities/add": {"post": {"operationId": "digitalTwins_identities_add_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Identity"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Identity"}}}, "tags": ["digitalTwins"]}, "parameters": [{"name": "uuid", "in": "path", "required": true, "type": "string"}]}, "/digitalTwins/{uuid}/identities/{id}": {"get": {"operationId": "digitalTwins_identities_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Identity"}}}, "tags": ["digitalTwins"]}, "delete": {"operationId": "digitalTwins_identities_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["digitalTwins"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this identity.", "required": true, "type": "integer"}, {"name": "uuid", "in": "path", "required": true, "type": "string"}]}, "/ecommerce/banners": {"get": {"operationId": "ecommerce_banners_list", "description": "", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Banner"}}}}}}, "tags": ["ecommerce"]}, "parameters": []}, "/ecommerce/banners/{id}": {"get": {"operationId": "ecommerce_banners_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Banner"}}}, "tags": ["ecommerce"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this banner.", "required": true, "type": "integer"}]}, "/getUrl": {"get": {"operationId": "getUrl_list", "summary": "Get url by alias", "description": "Returns url of product/store/brand/producer based on given alias", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": ""}}, "tags": ["getUrl"]}, "parameters": []}, "/marketing/aside-header/": {"get": {"operationId": "Get aside header", "description": "Get aside header. Filtered by create date", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "Found"}}, "tags": ["marketing"]}, "parameters": []}, "/marketing/main-slider/": {"get": {"operationId": "Get slider banners", "description": "Get banners for slider", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "Found"}}, "tags": ["marketing"]}, "parameters": []}, "/marketing/most-popular/": {"get": {"operationId": "Get most popular products", "description": "List most popular products in store", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "Found"}}, "tags": ["marketing"]}, "parameters": []}, "/marketing/news-section/": {"get": {"operationId": "Get news list", "description": "Get news list", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "Found"}}, "tags": ["marketing"]}, "parameters": []}, "/marketing/ninth-section-banner/": {"get": {"operationId": "Get second banner", "description": "Get second banner", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "Found"}}, "tags": ["marketing"]}, "parameters": []}, "/marketing/sixth-section-banner/": {"get": {"operationId": "Get first banner", "description": "Get first banner", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "Found"}}, "tags": ["marketing"]}, "parameters": []}, "/moderateChoices": {"get": {"operationId": "moderateChoices_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["moderateChoices"]}, "parameters": []}, "/myAnimals": {"post": {"operationId": "myAnimals_create", "summary": "Create Animal", "description": "Creates user animal", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/MyAnimalCreate"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/MyAnimalCreate"}}}, "tags": ["myAnimals"]}, "parameters": []}, "/myAnimals/search": {"get": {"operationId": "myAnimals_search_list", "summary": "Animal detail view", "description": "Returns myAnimal by given name", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/MyAnimal"}}}}}}, "tags": ["myAnimals"]}, "parameters": []}, "/myAnimals/{id}": {"get": {"operationId": "myAnimals_read", "summary": "Animal detail view", "description": "Returns myAnimal by given name", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/MyAnimal"}}}, "tags": ["myAnimals"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this my animal.", "required": true, "type": "integer"}]}, "/myAnimals/{slug}": {"get": {"operationId": "myAnimals_read", "summary": "Animal detail view", "description": "Returns myAnimal by given name", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/MyAnimal"}}}, "tags": ["myAnimals"]}, "parameters": [{"name": "slug", "in": "path", "required": true, "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$"}]}, "/newsletter": {"post": {"operationId": "newsletter_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/NewslettersEmail"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/NewslettersEmail"}}}, "tags": ["newsletter"]}, "parameters": []}, "/orders": {"get": {"operationId": "orders_list", "description": "", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Order"}}}}}}, "tags": ["orders"]}, "parameters": []}, "/orders/{id}": {"get": {"operationId": "orders_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Order"}}}, "tags": ["orders"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this order.", "required": true, "type": "integer"}]}, "/parse_xml/": {"post": {"operationId": "parse_xml_create", "description": "check if request user is superuser", "parameters": [{"name": "xml", "in": "formData", "required": true, "type": "file"}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Xml"}}}, "consumes": ["multipart/form-data"], "tags": ["parse_xml"]}, "parameters": []}, "/producers": {"get": {"operationId": "producers_list", "summary": "Listing Producers", "description": "Get all producers or filter them by product category", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/ProductProducer"}}}}}}, "tags": ["producers"]}, "parameters": []}, "/producers/add": {"post": {"operationId": "Create new producer", "description": "Create new product producer in deor database. Authorization required.Required fields: name of the producer", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": ["name"], "type": "object", "properties": {"name": {"description": "Name of the producer", "type": "string", "default": "Name"}, "description": {"description": "Producer description", "type": "string", "default": "Description body"}, "logo": {"description": "Producer logo", "type": "string", "default": "Logo url"}, "url": {"description": "Producer url", "type": "string", "default": "Producer url"}}}}], "responses": {"404": {"description": "Producer logo not found"}, "200": {"description": "Producer has been added"}}, "tags": ["producers"]}, "parameters": []}, "/producers/search": {"get": {"operationId": "producers_search_list", "summary": "Search for Producer", "description": "Search for products producer in deor database by it's name, returns all producers with matching string.", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/ProductProducer"}}}}}}, "tags": ["producers"]}, "parameters": []}, "/producers/{id}/delete": {"delete": {"operationId": "producers_delete_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["producers"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this product producer.", "required": true, "type": "integer"}]}, "/producers/{id}/update": {"put": {"operationId": "producers_update_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ProductProducerDeleteOrUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ProductProducerDeleteOrUpdate"}}}, "tags": ["producers"]}, "patch": {"operationId": "producers_update_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ProductProducerDeleteOrUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ProductProducerDeleteOrUpdate"}}}, "tags": ["producers"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this product producer.", "required": true, "type": "integer"}]}, "/producers/{slug}": {"get": {"operationId": "producers_read", "summary": "Producer details", "description": "Get details about the producer by the slug.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ProductProducer"}}}, "tags": ["producers"]}, "parameters": [{"name": "slug", "in": "path", "required": true, "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$"}]}, "/producers/{slug}/AddReview": {"post": {"operationId": "producers_AddReview_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ProductProducerReviewCreate"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ProductProducerReviewCreate"}}}, "tags": ["producers"]}, "parameters": [{"name": "slug", "in": "path", "required": true, "type": "string"}]}, "/producers/{slug}/categories": {"get": {"operationId": "producers_categories_list", "summary": "Producer detail view", "description": "Returns producer detail view with product categories", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/ProductProducer"}}}}}}, "tags": ["producers"]}, "parameters": [{"name": "slug", "in": "path", "required": true, "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$"}]}, "/producers/{slug}/featured-products": {"get": {"operationId": "producers_featured-products_list", "summary": "Producer featured products", "description": "Return all featured products of given producer (by producer slug).", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/ProductInStore"}}}}}}, "tags": ["producers"]}, "parameters": [{"name": "slug", "in": "path", "required": true, "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$"}]}, "/producers/{slug}/products": {"get": {"operationId": "producers_products_list", "summary": "Producer products", "description": "Return all products of given producer (by producer slug).", "parameters": [{"name": "category_parent", "in": "query", "description": "Type parent category slug", "required": false, "type": "string"}, {"name": "category_child", "in": "query", "description": "Type child category slug", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/ProductInStore"}}}}}}, "tags": ["producers"]}, "parameters": [{"name": "slug", "in": "path", "required": true, "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$"}]}, "/producers/{slug}/reviews": {"get": {"operationId": "producers_reviews_list", "summary": "Producer reviews", "description": "Return all reviews of the products producer (by producer slug).", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/ProductProducerReview"}}}}}}, "tags": ["producers"]}, "parameters": [{"name": "slug", "in": "path", "required": true, "type": "string"}]}, "/producers/{slug}/reviews/{id}/reportReview": {"post": {"operationId": "producers_reviews_reportReview_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ReportProducerReview"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ReportProducerReview"}}}, "tags": ["producers"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}, {"name": "slug", "in": "path", "required": true, "type": "string"}]}, "/product-in-cart/add": {"post": {"operationId": "product-in-cart_add_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AddProductToCart"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/AddProductToCart"}}}, "tags": ["product-in-cart"]}, "parameters": []}, "/product-in-cart/{id}/delete": {"get": {"operationId": "product-in-cart_delete_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/DeleteProductInCart"}}}, "tags": ["product-in-cart"]}, "delete": {"operationId": "product-in-cart_delete_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["product-in-cart"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/product-in-cart/{id}/quantity": {"get": {"operationId": "product-in-cart_quantity_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ProductInCartQuantity"}}}, "tags": ["product-in-cart"]}, "put": {"operationId": "product-in-cart_quantity_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ProductInCartQuantity"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ProductInCartQuantity"}}}, "tags": ["product-in-cart"]}, "patch": {"operationId": "product-in-cart_quantity_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ProductInCartQuantity"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ProductInCartQuantity"}}}, "tags": ["product-in-cart"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/products": {"get": {"operationId": "products_list", "summary": "Product list", "description": "Returns all products in deor.co. You can search specific product by giving param called \"search\".", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/ProductInStore"}}}}}}, "tags": ["products"]}, "parameters": []}, "/products/add": {"post": {"operationId": "products_add_create", "summary": "Create new product", "description": "Create new product in deor database. \nYou need to fill data for product and for product in store - in our marketplace. \nAuthorization required.\nRequired fields: name, category (you can add multiple categories by id), producer of the product and unique id with it's type.\nAlso, for product in store required fields are: id of the store, currency and url to the product", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ProductInStoreCreate"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ProductInStoreCreate"}}}, "tags": ["products"]}, "parameters": []}, "/products/featured": {"get": {"operationId": "products_featured_list", "summary": "Featured products", "description": "Returns featured product list.", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/ProductInStore"}}}}}}, "tags": ["products"]}, "parameters": []}, "/products/popular": {"get": {"operationId": "products_popular_list", "summary": "Most popular products", "description": "Returns list of 3 most popular products.", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/ProductInStore"}}}}}}, "tags": ["products"]}, "parameters": []}, "/products/search": {"get": {"operationId": "Products search", "description": "Returns a list of products filtered by given category. Example query: api/v1/products/search?category_parent=&category_child=. Authorization not required", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "category_parent", "in": "query", "description": "Type parent category slug", "required": false, "type": "string"}, {"name": "category_child", "in": "query", "description": "Type child category slug", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "Created"}, "404": {"description": "Not found"}}, "tags": ["products"]}, "parameters": []}, "/products/{id}/delete": {"delete": {"operationId": "products_delete_delete", "summary": "Delete product", "description": "Deleting product from deor database. Authorization required. Required fields: pk (primary key of product).", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["products"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this product in store.", "required": true, "type": "integer"}]}, "/products/{id}/update": {"put": {"operationId": "products_update_update", "summary": "Update all product data", "description": "Updating product data. Authorization required. Required field: pk (primary key of Product)", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ProductInStoreDeleteOrUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ProductInStoreDeleteOrUpdate"}}}, "tags": ["products"]}, "patch": {"operationId": "products_update_partial_update", "summary": "Update product data partialy", "description": "Updating product data. Authorization required. Required field: pk (primary key of Product)", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ProductInStoreDeleteOrUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ProductInStoreDeleteOrUpdate"}}}, "tags": ["products"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this product in store.", "required": true, "type": "integer"}]}, "/products/{slug}": {"get": {"operationId": "products_read", "summary": "Product detail view", "description": "Returns product detail view (getting object by slug).", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/ProductInStore"}}}}}}, "tags": ["products"]}, "parameters": [{"name": "slug", "in": "path", "required": true, "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$"}]}, "/products/{slug}/AddReview": {"post": {"operationId": "products_AddReview_create", "summary": "Create product review", "description": "Creates product review. Authorization required. Add review by giving product slug.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ProductReviewCreate"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ProductReviewCreate"}}}, "tags": ["products"]}, "parameters": [{"name": "slug", "in": "path", "required": true, "type": "string"}]}, "/products/{slug}/like": {"post": {"operationId": "products_like_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Like"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Like"}}}, "tags": ["products"]}, "delete": {"operationId": "products_like_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["products"]}, "parameters": [{"name": "slug", "in": "path", "required": true, "type": "string"}]}, "/products/{slug}/reviews": {"get": {"operationId": "products_reviews_list", "summary": "Product reviews", "description": "Returns all reviews of specific product. Search review by giving product slug.", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/ProductReview"}}}}}}, "tags": ["products"]}, "parameters": [{"name": "slug", "in": "path", "required": true, "type": "string"}]}, "/products/{slug}/reviews/{id}/reportReview": {"post": {"operationId": "products_reviews_reportReview_create", "summary": "Report product review", "description": "Report product review. Authorization required. Report review by product slug and id of review.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ReportProductReview"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ReportProductReview"}}}, "tags": ["products"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this product in store.", "required": true, "type": "integer"}, {"name": "slug", "in": "path", "required": true, "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$"}]}, "/products/{slug}/similar": {"get": {"operationId": "products_similar_list", "summary": "Similar products list", "description": "Returns list of similar products. Search by product slug.", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/ProductInStore"}}}}}}, "tags": ["products"]}, "parameters": [{"name": "slug", "in": "path", "required": true, "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$"}]}, "/products/{slug}/tag": {"put": {"operationId": "products_tag_update", "summary": "Update product tags", "description": "Update product tag field in database. Authorization required. Add tags by product slug.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TagProduct"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/TagProduct"}}}, "tags": ["products"]}, "patch": {"operationId": "products_tag_partial_update", "summary": "Update product tags partialy", "description": "Update product tags partialy", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TagProduct"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/TagProduct"}}}, "tags": ["products"]}, "parameters": [{"name": "slug", "in": "path", "required": true, "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$"}]}, "/questions": {"get": {"operationId": "questions_list", "summary": "Questions list", "description": "Return questions list wrote in deor.co.", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Questions"}}}}}}, "tags": ["questions"]}, "parameters": []}, "/questions/{id}": {"get": {"operationId": "questions_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/QuestionDetail"}}}, "tags": ["questions"]}, "put": {"operationId": "questions_update", "summary": "Update question data", "description": "Update your question", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/QuestionDetail"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/QuestionDetail"}}}, "tags": ["questions"]}, "patch": {"operationId": "questions_partial_update", "summary": "Update question data partialy", "description": "Update your question", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/QuestionDetail"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/QuestionDetail"}}}, "tags": ["questions"]}, "delete": {"operationId": "questions_delete", "summary": "Delete question", "description": "Delete your question", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["questions"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this question.", "required": true, "type": "integer"}]}, "/questions/{id}/answers": {"get": {"operationId": "questions_answers_list", "description": "", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/AnswerDetail"}}}}}}, "tags": ["questions"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this answer.", "required": true, "type": "integer"}]}, "/register": {"post": {"operationId": "register_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CreateUser"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/CreateUser"}}}, "tags": ["register"]}, "parameters": []}, "/register/expert": {"post": {"operationId": "register_expert_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CreateExpertUser"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/CreateExpertUser"}}}, "tags": ["register"]}, "parameters": []}, "/reset-password": {"post": {"operationId": "reset-password_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ResetPassword"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ResetPassword"}}}, "tags": ["reset-password"]}, "parameters": []}, "/set-new-password/{user}/{token}": {"post": {"operationId": "set-new-password_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CreateNewpassword"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/CreateNewpassword"}}}, "tags": ["set-new-password"]}, "parameters": [{"name": "token", "in": "path", "required": true, "type": "string"}, {"name": "user", "in": "path", "required": true, "type": "string"}]}, "/shopping-carts/{id}": {"get": {"operationId": "shopping-carts_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ShoppingCart"}}}, "tags": ["shopping-carts"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/specialists": {"get": {"operationId": "specialists_list", "summary": "Specialists list near 20km", "description": "Returns specialists list near user (range 20km). Serching specialist by city, category, service. Filter fields:\n'city_name', 'category_name', 'service_slug', 'category_slug'. Usage: api.deor.co/api/v1/specialists?city_name=name", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "city_name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "category_name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "service_slug", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "category_slug", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Specialist"}}}}}}, "tags": ["specialists"]}, "parameters": []}, "/specialists/category/{id}": {"get": {"operationId": "specialists_category_read", "summary": "Specialist product categories", "description": "Returns Specialist product categories. Searching specialisty by primary key (pk).", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Specialist"}}}}}}, "tags": ["specialists"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/specialists/featured": {"get": {"operationId": "specialists_featured_list", "summary": "Specialists list", "description": "Returns specialists list.", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Specialist"}}}}}}, "tags": ["specialists"]}, "parameters": []}, "/specialists/{id}/addMembers": {"post": {"operationId": "specialists_addMembers_create", "summary": "Add Specialist member", "description": "Adding specialist member. Authorization and ownership required.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/EntityMemberCreate"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/EntityMemberCreate"}}}, "tags": ["specialists"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this member entity.", "required": true, "type": "integer"}]}, "/specialists/{id}/uploadPhotos": {"post": {"operationId": "specialists_uploadPhotos_create", "summary": "Add Specialist photo", "description": "Adding specialist photo. Authorization and ownership required.", "parameters": [], "responses": {"201": {"description": ""}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["specialists"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/specialists/{slug}": {"get": {"operationId": "specialists_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Specialist"}}}, "tags": ["specialists"]}, "put": {"operationId": "Change specialist data", "description": "Changing specialist data. Authorization and ownership required. Search specialist by slug.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Specialist"}}], "responses": {"404": {"description": "Specialist not found"}, "200": {"description": "Data changed succesfully"}}, "tags": ["specialists"]}, "patch": {"operationId": "Change specialist data partialy", "description": "Changing specialist data. Authorization and ownership required. Search specialist by slug.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Specialist"}}], "responses": {"404": {"description": "Specialist not found"}, "200": {"description": "Data changed succesfully"}}, "tags": ["specialists"]}, "delete": {"operationId": "Delete specialist", "description": "Delete specialist data from database. Authorization and ownership required. Search specialist by slug.", "parameters": [], "responses": {"404": {"description": "Specialist not found"}, "200": {"description": "Succesfully deleted"}}, "tags": ["specialists"]}, "parameters": [{"name": "slug", "in": "path", "required": true, "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$"}]}, "/specialists/{slug}/AddReview": {"post": {"operationId": "specialists_AddReview_create", "summary": "Add specialist review", "description": "Adding specialist review. Authorization required. Search specialist by slug", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SpecialistReviewCreate"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/SpecialistReviewCreate"}}}, "tags": ["specialists"]}, "parameters": [{"name": "slug", "in": "path", "required": true, "type": "string"}]}, "/specialists/{slug}/addServices": {"put": {"operationId": "specialists_addServices_update", "summary": "Update specialist Services", "description": "Update specialist Services. Authorization and ownership required.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SpecialistServices"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SpecialistServices"}}}, "tags": ["specialists"]}, "patch": {"operationId": "specialists_addServices_partial_update", "summary": "Update specialist Services partialy", "description": "Update specialist Services partialy. Authorization and ownership required.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SpecialistServices"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SpecialistServices"}}}, "tags": ["specialists"]}, "parameters": [{"name": "slug", "in": "path", "required": true, "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$"}]}, "/specialists/{slug}/reportSpecialist": {"post": {"operationId": "specialists_reportSpecialist_create", "summary": "Report Specialist", "description": "Report specialist. Authorization required. Search specialist by slug.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ReportSpecialist"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ReportSpecialist"}}}, "tags": ["specialists"]}, "parameters": [{"name": "slug", "in": "path", "required": true, "type": "string"}]}, "/specialists/{slug}/reviews": {"get": {"operationId": "specialists_reviews_list", "summary": "Specialist reviews", "description": "Returns all specialist reviews. Search specialist by his slug.", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/SpecialistReview"}}}}}}, "tags": ["specialists"]}, "parameters": [{"name": "slug", "in": "path", "required": true, "type": "string"}]}, "/specialists/{slug}/reviews/{id}": {"get": {"operationId": "specialists_reviews_read", "summary": "Specialist detail view", "description": "Return specialis detail data. Searching by specialist slug.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SpecialistReviewDetail"}}}, "tags": ["specialists"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this entity review.", "required": true, "type": "integer"}, {"name": "slug", "in": "path", "required": true, "type": "string"}]}, "/specialists/{slug}/reviews/{id}/reportReview": {"post": {"operationId": "specialists_reviews_reportReview_create", "summary": "Report specialist review", "description": "Reporting specialist review. To report, you have to send specialist slug and review id", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SpecialistReportReview"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/SpecialistReportReview"}}}, "tags": ["specialists"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}, {"name": "slug", "in": "path", "required": true, "type": "string"}]}, "/specialistsAdd": {"post": {"operationId": "specialistsAdd_create", "summary": "Specialist add", "description": "Adding specialist. Authorization required.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/EntityCreate"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/EntityCreate"}}}, "tags": ["specialistsAdd"]}, "parameters": []}, "/specialistsCategories": {"get": {"operationId": "specialistsCategories_list", "summary": "Specialists categories list", "description": "Returns list of specialists categories.", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/SpecialistCategory"}}}}}}, "tags": ["specialistsCategories"]}, "parameters": []}, "/specialistsServices": {"get": {"operationId": "specialistsServices_list", "summary": "Specialist services by animal", "description": "Returns specialist services by animals (search by slug).", "parameters": [{"name": "animal__slug", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/EntityService"}}}}}}, "tags": ["specialistsServices"]}, "parameters": []}, "/specializations": {"get": {"operationId": "specializations_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["specializations"]}, "parameters": []}, "/stores": {"get": {"operationId": "stores_list", "summary": "List stores", "description": "Get all stores or filter them by product category", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Store"}}}}}}, "tags": ["stores"]}, "parameters": []}, "/stores/add": {"post": {"operationId": "Create new store", "description": "Create new store in deor database. Authorization required. Required fields: name of the store", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": ["name"], "type": "object", "properties": {"name": {"description": "Name of the store", "type": "string", "default": "Name"}, "description": {"description": "Store description", "type": "string", "default": "Description body"}, "logo": {"description": "Store logo", "type": "string", "default": "Logo url"}, "url": {"description": "Brand url", "type": "string", "default": "Store url"}}}}], "responses": {"404": {"description": "Store logo not found"}, "200": {"description": "Store has been added"}}, "tags": ["stores"]}, "parameters": []}, "/stores/search": {"get": {"operationId": "stores_search_list", "summary": "Store Search", "description": "Returns lists of stores in deor. You can search for particular store by its name in search bar, \nor by name of category (category__name search field) that particular store belongs in", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "category__name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Store"}}}}}}, "tags": ["stores"]}, "parameters": []}, "/stores/{id}/delete": {"delete": {"operationId": "stores_delete_delete", "summary": "Store delete", "description": "Delete store with given ID", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["stores"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this store.", "required": true, "type": "integer"}]}, "/stores/{id}/update": {"put": {"operationId": "stores_update_update", "summary": "Stores update", "description": "Update store data", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/StoreDeleteOrUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/StoreDeleteOrUpdate"}}}, "tags": ["stores"]}, "patch": {"operationId": "stores_update_partial_update", "summary": "Stores update", "description": "Update store data partialy, with given fields name.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/StoreDeleteOrUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/StoreDeleteOrUpdate"}}}, "tags": ["stores"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this store.", "required": true, "type": "integer"}]}, "/stores/{slug}": {"get": {"operationId": "stores_read", "summary": "Get Store detail data", "description": "Returns store data in deor. Store is choosen by his slug.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Store"}}}, "tags": ["stores"]}, "parameters": [{"name": "slug", "in": "path", "required": true, "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$"}]}, "/stores/{slug}/AddReview": {"post": {"operationId": "stores_AddReview_create", "summary": "Create store review", "description": "Creates store review in deor.co", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/StoreReviewCreate"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/StoreReviewCreate"}}}, "tags": ["stores"]}, "parameters": [{"name": "slug", "in": "path", "required": true, "type": "string"}]}, "/stores/{slug}/categories": {"get": {"operationId": "stores_categories_list", "summary": "Store products categories", "description": "Return all products categories which belongs to store.", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Store"}}}}}}, "tags": ["stores"]}, "parameters": [{"name": "slug", "in": "path", "required": true, "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$"}]}, "/stores/{slug}/featured-products": {"get": {"operationId": "stores_featured-products_list", "summary": "Store featured products", "description": "Return all featured products of given store (by store slug).", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/ProductInStore"}}}}}}, "tags": ["stores"]}, "parameters": [{"name": "slug", "in": "path", "required": true, "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$"}]}, "/stores/{slug}/products": {"get": {"operationId": "stores_products_list", "summary": "Store products", "description": "Return all products of given store (store slug).", "parameters": [{"name": "category_parent", "in": "query", "description": "Type parent category slug", "required": false, "type": "string"}, {"name": "category_child", "in": "query", "description": "Type child category slug", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/ProductInStore"}}}}}}, "tags": ["stores"]}, "parameters": [{"name": "slug", "in": "path", "required": true, "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$"}]}, "/stores/{slug}/reviews": {"get": {"operationId": "stores_reviews_list", "summary": "Store reviews", "description": "Returns all store reviews by given store slug.", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/StoreReview"}}}}}}, "tags": ["stores"]}, "parameters": [{"name": "slug", "in": "path", "required": true, "type": "string"}]}, "/stores/{slug}/reviews/{id}/reportReview": {"post": {"operationId": "stores_reviews_reportReview_create", "summary": "Report store review", "description": "Reports review of store by given review id and store slug.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ReportStoreReview"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ReportStoreReview"}}}, "tags": ["stores"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}, {"name": "slug", "in": "path", "required": true, "type": "string"}]}, "/token": {"post": {"operationId": "token_create", "summary": "User login", "description": "Takes a set of user credentials and returns an access and refresh JSON web\ntoken pair to prove the authentication of those credentials.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Login"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Login"}}}, "tags": ["token"]}, "parameters": []}, "/token/refresh": {"post": {"operationId": "token_refresh_create", "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TokenRefresh"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/TokenRefresh"}}}, "tags": ["token"]}, "parameters": []}, "/top100": {"get": {"operationId": "top100_list", "description": "", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/AnswerExperts"}}}}}}, "tags": ["top100"]}, "parameters": []}, "/users/login/": {"post": {"operationId": "users_login_create", "summary": "User login", "description": "Takes a set of user credentials and returns an access and refresh JSON web\ntoken pair to prove the authentication of those credentials.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Login"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Login"}}}, "tags": ["users"]}, "parameters": []}, "/users/logout": {"post": {"operationId": "users_logout_create", "summary": "Logout endpoint", "description": "Logout user session", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Logout"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Logout"}}}, "tags": ["users"]}, "parameters": []}, "/users/me": {"get": {"operationId": "users_me_read", "summary": "User data", "description": "Return logged user data.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/User"}}}, "tags": ["users"]}, "put": {"operationId": "users_me_update", "summary": "Update User data", "description": "Update your data in deor. Required fields: email", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/User"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/User"}}}, "tags": ["users"]}, "patch": {"operationId": "users_me_partial_update", "summary": "Update User data", "description": "Update your data in deor. Required fields: email", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/User"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/User"}}}, "tags": ["users"]}, "parameters": []}, "/users/me/animals": {"get": {"operationId": "users_me_animals_list", "summary": "Current user animals", "description": "Return all animals that belong to logged user.", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/AnimalMyAnimals"}}}}}}, "tags": ["users"]}, "parameters": []}, "/users/me/animals/{id}": {"get": {"operationId": "users_me_animals_read", "summary": "Current user animal", "description": "Return details about logged user animals by animal id.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/MyAnimal"}}}, "tags": ["users"]}, "put": {"operationId": "users_me_animals_update", "summary": "Update your animal data", "description": "Update your animal data in deor. Required fields: id and name of your animal, id of the animal's species", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/MyAnimal"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/MyAnimal"}}}, "tags": ["users"]}, "patch": {"operationId": "users_me_animals_partial_update", "summary": "Update your animal data", "description": "Update your animal data in deor. Required fields: id and name of your animal, id of the animal's species", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/MyAnimal"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/MyAnimal"}}}, "tags": ["users"]}, "delete": {"operationId": "users_me_animals_delete", "summary": "Delete your animal", "description": "Delete your animal from deor database. Required fields: id of your animal", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["users"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/users/me/avatar": {"put": {"operationId": "users_me_avatar_update", "description": "", "parameters": [{"name": "image", "in": "formData", "required": true, "type": "file"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ChangeAvatar"}}}, "consumes": ["multipart/form-data"], "tags": ["users"]}, "patch": {"operationId": "users_me_avatar_partial_update", "description": "", "parameters": [{"name": "image", "in": "formData", "required": true, "type": "file"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ChangeAvatar"}}}, "consumes": ["multipart/form-data"], "tags": ["users"]}, "parameters": []}, "/users/me/change-to-member": {"post": {"operationId": "Change user role to Member", "description": "Changing user account role (Member)", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": ["specializations"], "type": "object", "properties": {"specializations": {"description": "Specialist specilizations", "type": "array", "items": {"type": "integer"}, "default": [1, 2]}}}}], "responses": {"201": {"description": "Created"}, "403": {"description": "Forbidden"}}, "tags": ["users"]}, "parameters": []}, "/users/me/likedProducts": {"get": {"operationId": "users_me_likedProducts_list", "description": "", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/ProductsLiked"}}}}}}, "tags": ["users"]}, "parameters": []}, "/users/me/notifications": {"get": {"operationId": "users_me_notifications_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/UserNotifications"}}}, "tags": ["users"]}, "put": {"operationId": "users_me_notifications_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UserNotifications"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/UserNotifications"}}}, "tags": ["users"]}, "patch": {"operationId": "users_me_notifications_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UserNotifications"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/UserNotifications"}}}, "tags": ["users"]}, "parameters": []}, "/users/me/password": {"put": {"operationId": "users_me_password_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ChangePassword"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ChangePassword"}}}, "tags": ["users"]}, "patch": {"operationId": "users_me_password_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ChangePassword"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ChangePassword"}}}, "tags": ["users"]}, "parameters": []}, "/users/verify-email/{user}/{token}": {"post": {"operationId": "users_verify-email_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["users"]}, "parameters": [{"name": "token", "in": "path", "required": true, "type": "string"}, {"name": "user", "in": "path", "required": true, "type": "string"}]}, "/users/{id}": {"get": {"operationId": "users_read", "summary": "User data (id)", "description": "Return user data by id.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/User"}}}, "tags": ["users"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this u\u017cytkownik.", "required": true, "type": "integer"}]}, "/users/{slug}": {"get": {"operationId": "users_read", "summary": "User data (slug)", "description": "Return user data by slug.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/User"}}}, "tags": ["users"]}, "parameters": [{"name": "slug", "in": "path", "required": true, "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$"}]}, "/webhooks/{store_uuid}": {"patch": {"operationId": "webhooks_partial_update", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["webhooks"]}, "parameters": [{"name": "store_uuid", "in": "path", "required": true, "type": "string"}]}}, "definitions": {"EntityVisited": {"required": ["visited_entities"], "type": "object", "properties": {"visited_entities": {"title": "Visited entities", "description": "User metrics. Entity field, required specialist id", "type": "integer"}, "user": {"title": "User", "description": "User whom statistics are created. Not required when making request", "type": "integer"}}}, "Animal": {"required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "singular_name": {"title": "Animal species name in singular form", "description": "Animal species name in singular form", "type": "string", "maxLength": 100, "x-nullable": true}, "slug": {"title": "Slug", "description": "Animal species slug", "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$", "readOnly": true, "minLength": 1}, "name": {"title": "Name", "description": "Animal species name", "type": "string", "maxLength": 100, "minLength": 1}}}, "AnimalAvatar": {"type": "object", "properties": {"image": {"title": "Image", "type": "string", "readOnly": true, "format": "uri"}}}, "AnimalBreed": {"required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "description": "Name of the animal breed", "type": "string", "maxLength": 256, "minLength": 1}, "slug": {"title": "Slug", "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$", "readOnly": true, "minLength": 1}, "animal": {"title": "Animal", "type": "integer", "readOnly": true}}}, "AnimalColor": {"required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "description": "Name of the animal's color", "type": "string", "maxLength": 256, "minLength": 1}, "slug": {"title": "Slug", "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$", "readOnly": true, "minLength": 1}, "animal": {"title": "Animal", "type": "integer", "readOnly": true}}}, "AnimalImg": {"type": "object", "properties": {"image": {"title": "Image", "type": "string", "readOnly": true, "format": "uri"}}}, "AnimalSex": {"required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "description": "The sex of the animal", "type": "string", "maxLength": 256, "minLength": 1}, "slug": {"title": "Slug", "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$", "readOnly": true, "minLength": 1}, "animal": {"title": "Animal", "type": "integer", "readOnly": true}}}, "UserData": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "first_name": {"title": "First name", "type": "string", "maxLength": 50, "minLength": 1, "x-nullable": true}, "last_name": {"title": "Last name", "type": "string", "maxLength": 50, "minLength": 1, "x-nullable": true}, "slug": {"title": "Slug", "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$", "readOnly": true, "minLength": 1}}}, "AnimalMyAnimals": {"required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "animal": {"$ref": "#/definitions/Animal"}, "breed": {"$ref": "#/definitions/AnimalBreed"}, "color": {"$ref": "#/definitions/AnimalColor"}, "sex": {"$ref": "#/definitions/AnimalSex"}, "photo_list": {"title": "Photo list", "type": "object", "readOnly": true}, "user": {"$ref": "#/definitions/UserData"}, "name": {"title": "Name", "description": "Your animal's name", "type": "string", "maxLength": 256, "minLength": 1}, "slug": {"title": "Slug", "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$", "readOnly": true, "minLength": 1}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time"}, "birthyear": {"title": "Birthyear", "description": "Your animal's year of birth", "type": "string", "maxLength": 16, "x-nullable": true}, "weight": {"title": "Weight", "description": "Your animal's weight", "type": "string", "enum": ["XS", "S", "M", "L", "XL", "XXL"]}, "height": {"title": "Height", "description": "Your animal's height", "type": "string", "maxLength": 32, "x-nullable": true}, "father": {"title": "Father", "description": "The father of your animal", "type": "string", "maxLength": 128, "x-nullable": true}, "mother": {"title": "Mother", "description": "The mother of your animal", "type": "string", "maxLength": 128, "x-nullable": true}, "doc_num": {"title": "Doc num", "description": "Your animal's ID number (e.g. passport)", "type": "string", "maxLength": 128, "minLength": 1, "x-nullable": true}, "unknown_breed": {"title": "Unknown breed", "description": "True if your animal is unknown_breed", "type": "boolean"}, "unknown_breed_name": {"title": "Unknown breed name", "type": "string", "maxLength": 128, "x-nullable": true}, "entity": {"title": "Entity", "type": "integer", "x-nullable": true}}}, "AnswerQuestions": {"required": ["answer"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "user": {"title": "User", "type": "integer", "readOnly": true}, "question": {"title": "Question", "type": "integer", "readOnly": true}, "answer": {"title": "Answer", "type": "string", "minLength": 1}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time"}, "number_of_points": {"title": "Number of points", "description": "Answer voting number", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "moderate_status": {"title": "Moderate status", "type": "boolean"}}}, "AnswerDetail": {"required": ["answer", "question"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "user": {"title": "User", "type": "string", "readOnly": true, "minLength": 1}, "user_slug": {"title": "User slug", "type": "string", "readOnly": true, "minLength": 1}, "answer": {"title": "Answer", "type": "string", "minLength": 1}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time"}, "number_of_points": {"title": "Number of points", "description": "Answer voting number", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "moderate_status": {"title": "Moderate status", "type": "boolean"}, "question": {"title": "Question", "type": "integer"}}}, "ReportAnswer": {"required": ["moderate_reason"], "type": "object", "properties": {"answer": {"title": "Answer", "type": "integer", "readOnly": true}, "moderate_reason": {"title": "Moderate reason", "type": "string", "enum": ["obrazliwy", "niezgodny_z_prawem", "niezgodny_z_regulaminem", "inne"]}, "moderate_comment": {"title": "Moderate comment", "type": "string", "x-nullable": true}, "complain_by": {"title": "Complain by", "type": "integer", "readOnly": true}}}, "AnswerPointsHistory": {"required": ["number_of_points"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "user": {"title": "User", "type": "integer", "readOnly": true}, "answer": {"title": "Answer", "type": "integer", "readOnly": true}, "number_of_points": {"title": "Number of points", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time"}}}, "AskQuestion": {"required": ["question_subject", "animal"], "type": "object", "properties": {"question_subject": {"title": "Question subject", "type": "string", "minLength": 1}, "question_text": {"title": "Question text", "type": "string", "x-nullable": true}, "user": {"title": "User", "type": "integer", "readOnly": true}, "animal": {"title": "Animal", "description": "Question animal", "type": "integer"}}}, "Brand": {"required": ["name", "reviews_quantity"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "description": "Name of the brand", "type": "string", "maxLength": 200, "minLength": 1}, "slug": {"title": "Slug", "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$", "readOnly": true, "minLength": 1}, "description": {"title": "Description", "description": "Extra description", "type": "string", "maxLength": 2000, "x-nullable": true}, "creator": {"title": "Creator", "type": "integer", "x-nullable": true}, "points_from_reviews": {"title": "Points from reviews", "description": "\u015arednia ocena produkt\u00f3w marki", "type": "string", "format": "decimal"}, "logo": {"title": "Logo", "description": "dwd", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "url": {"title": "Url", "description": "Url address to the brand", "type": "string", "maxLength": 200, "minLength": 1, "x-nullable": true}, "reviews_quantity": {"title": "Reviews quantity", "type": "integer"}, "producer": {"title": "Producer", "type": "string", "readOnly": true}, "short_url": {"title": "Short url", "type": "string", "readOnly": true}}}, "BrandDeleteOrUpdate": {"required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "description": "Name of the brand", "type": "string", "maxLength": 200, "minLength": 1}, "slug": {"title": "Slug", "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$", "readOnly": true, "minLength": 1}, "description": {"title": "Description", "description": "Extra description", "type": "string", "maxLength": 2000, "x-nullable": true}, "creator": {"title": "Creator", "type": "integer", "x-nullable": true}, "logo": {"title": "Logo", "description": "dwd", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "url": {"title": "Url", "description": "Url address to the brand", "type": "string", "maxLength": 200, "minLength": 1, "x-nullable": true}}}, "BrandReviewCreate": {"required": ["review"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "review": {"title": "Review", "description": "Review content", "type": "string", "minLength": 1}, "number_of_points": {"title": "Number of points", "description": "Review rate points", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "user": {"title": "User", "type": "integer", "readOnly": true}, "brand": {"title": "Brand", "type": "integer", "readOnly": true}}}, "ProductCategory": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "description": "Name of the product category", "type": "string", "maxLength": 64, "minLength": 1, "x-nullable": true}, "slug": {"title": "Slug", "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$", "readOnly": true, "minLength": 1}}}, "ProductInStore": {"required": ["product", "name", "points_from_reviews", "reviews_quantity", "currency", "description", "unique_id"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "product": {"title": "Product", "description": "Name of the product listed in marketplace", "type": "integer"}, "name": {"title": "Name", "type": "string", "minLength": 1}, "slug": {"title": "Slug", "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$", "readOnly": true, "minLength": 1}, "brand": {"title": "Brand", "type": "string", "readOnly": true}, "producer": {"title": "Producer", "type": "string", "readOnly": true}, "category": {"type": "array", "items": {"$ref": "#/definitions/ProductCategory"}, "readOnly": true}, "points_from_reviews": {"title": "Points from reviews", "type": "string", "minLength": 1}, "reviews_quantity": {"title": "Reviews quantity", "type": "integer"}, "attributes": {"title": "Attributes", "type": "string", "readOnly": true}, "store": {"title": "Store", "type": "string", "readOnly": true}, "price": {"title": "Price", "description": "Price in store", "type": "string", "format": "decimal"}, "old_price": {"title": "Old price", "description": "Old price in store (for discounts)", "type": "string", "format": "decimal"}, "discount": {"title": "Discount", "description": "Discount", "type": "string", "maxLength": 10}, "currency": {"title": "Currency", "type": "string", "maxLength": 4, "minLength": 1}, "url": {"title": "Url", "type": "string", "format": "uri", "readOnly": true}, "description": {"title": "Description", "type": "string", "minLength": 1}, "img": {"title": "Img", "type": "string", "readOnly": true}, "short_url": {"title": "Short url", "type": "string", "readOnly": true}, "unique_id": {"title": "Unique id", "type": "string", "minLength": 1}}}, "BrandReview": {"required": ["review", "user", "user_first_name", "user_last_name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "review": {"title": "Review", "description": "Review content", "type": "string", "minLength": 1}, "number_of_points": {"title": "Number of points", "description": "Review rate points", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "review_status": {"title": "Review status", "description": "Review status", "type": "string", "enum": ["shown", "hidden"]}, "user": {"title": "User", "type": "string", "minLength": 1}, "user_first_name": {"title": "User first name", "type": "string", "minLength": 1}, "user_last_name": {"title": "User last name", "type": "string", "minLength": 1}, "brand": {"title": "Brand", "description": "Brand review", "type": "integer", "x-nullable": true}, "answer_for": {"title": "Answer for", "type": "string", "x-nullable": true}}}, "ReportBrandReview": {"required": ["flag_text"], "type": "object", "properties": {"flag_text": {"title": "Flag text", "type": "string", "maxLength": 300, "minLength": 1}}}, "SpecialistCategory": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "category_name": {"title": "Category name", "description": "Name of the category", "type": "string", "maxLength": 64, "minLength": 1, "x-nullable": true}, "slug": {"title": "Slug", "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$", "readOnly": true, "minLength": 1}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time"}}}, "CityList": {"required": ["city_name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "city_name": {"title": "City name", "description": "Name of the city", "type": "string", "maxLength": 64, "minLength": 1}, "province": {"title": "Province", "description": "Name of the voivodeship", "type": "string", "maxLength": 64, "x-nullable": true}, "county": {"title": "County", "description": "Name of the county", "type": "string", "maxLength": 64, "x-nullable": true}, "slug": {"title": "Slug", "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$", "maxLength": 40}, "city_name_variant_category": {"title": "City name with a variant for the category", "description": "City name with a variant for the category", "type": "string", "maxLength": 64, "x-nullable": true}, "is_big_cty": {"title": "Is big cty", "description": "True is the city is big", "type": "boolean"}}}, "CityCreate": {"required": ["city_name"], "type": "object", "properties": {"city_name": {"title": "City name", "description": "Name of the city", "type": "string", "maxLength": 64, "minLength": 1}, "city_name_variant_category": {"title": "City name with a variant for the category", "description": "City name with a variant for the category", "type": "string", "maxLength": 64, "x-nullable": true}, "province": {"title": "Province", "description": "Name of the voivodeship", "type": "string", "maxLength": 64, "x-nullable": true}, "county": {"title": "County", "description": "Name of the county", "type": "string", "maxLength": 64, "x-nullable": true}, "lat": {"title": "Lat", "type": "string", "format": "decimal"}, "lng": {"title": "Lng", "type": "string", "format": "decimal"}, "is_big_cty": {"title": "Is big cty", "description": "True is the city is big", "type": "boolean"}}}, "DigitalTwin": {"required": ["uuid", "dt_animal_name", "dt_creator", "status", "deor_myanimal", "deor_user", "animal"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "uuid": {"title": "Uuid", "type": "string", "maxLength": 256, "minLength": 1}, "dt_animal_name": {"title": "Dt animal name", "type": "string", "maxLength": 256, "minLength": 1}, "dt_creator": {"title": "Dt creator", "type": "string", "maxLength": 256, "minLength": 1}, "status": {"title": "Status", "type": "string", "maxLength": 256, "minLength": 1}, "description": {"title": "Description", "type": "string", "minLength": 1, "x-nullable": true}, "deor_myanimal": {"title": "Deor myanimal", "type": "integer"}, "deor_user": {"title": "Deor user", "type": "integer"}, "animal": {"title": "Animal", "type": "integer"}}}, "Doc": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "twin": {"title": "Twin", "type": "integer", "readOnly": true}, "folder_name": {"title": "Folder name", "type": "string", "maxLength": 32, "x-nullable": true}, "document": {"title": "Document", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}}}, "Entry": {"required": ["entry_name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "twin": {"title": "Twin", "type": "integer", "readOnly": true}, "entry_name": {"title": "Entry name", "type": "string", "maxLength": 120, "minLength": 1}, "data": {"title": "Data", "type": "object", "x-nullable": true}}}, "Identity": {"required": ["identity_code"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "twin": {"title": "Twin", "type": "integer", "readOnly": true}, "identity_code": {"title": "Identity code", "description": "required regex: ^[A-Za-z_][0-9A-Za-z_]{0,7}#[0-9A-Za-z_=+-]{1,64}$", "type": "string", "maxLength": 200, "minLength": 1}}}, "Banner": {"required": ["banner_name", "banner_category"], "type": "object", "properties": {"banner_name": {"title": "Banner name", "type": "string", "maxLength": 128, "minLength": 1}, "banner_mobile_url": {"title": "Banner mobile url", "type": "string", "format": "uri", "maxLength": 200, "x-nullable": true}, "banner_mobile_image": {"title": "Banner mobile image", "type": "string", "readOnly": true}, "banner_web_url": {"title": "Banner web url", "type": "string", "format": "uri", "maxLength": 200, "x-nullable": true}, "banner_web_image": {"title": "Banner web image", "type": "string", "readOnly": true}, "banner_category": {"type": "array", "items": {"type": "integer"}, "uniqueItems": true}, "pk": {"title": "ID", "type": "integer", "readOnly": true}}}, "MyAnimalCreate": {"required": ["name", "animal"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "user": {"title": "User", "type": "integer", "x-nullable": true}, "name": {"title": "Name", "description": "Your animal's name", "type": "string", "maxLength": 256, "minLength": 1}, "slug": {"title": "Slug", "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$", "readOnly": true, "minLength": 1}, "animal": {"title": "Animal", "description": "Your animal", "type": "integer"}, "breed": {"title": "Breed", "description": "Name of your animal's breed", "type": "integer", "x-nullable": true}, "birthyear": {"title": "Birthyear", "description": "Your animal's year of birth", "type": "string", "maxLength": 16, "x-nullable": true}, "color": {"title": "Color", "description": "Color of your animal", "type": "integer", "x-nullable": true}, "weight": {"title": "Weight", "description": "Your animal's weight", "type": "string", "enum": ["XS", "S", "M", "L", "XL", "XXL"]}, "sex": {"title": "Sex", "description": "The sex of your animal", "type": "integer", "x-nullable": true}, "height": {"title": "Height", "description": "Your animal's height", "type": "string", "maxLength": 32, "x-nullable": true}, "father": {"title": "Father", "description": "The father of your animal", "type": "string", "maxLength": 128, "x-nullable": true}, "mother": {"title": "Mother", "description": "The mother of your animal", "type": "string", "maxLength": 128, "x-nullable": true}, "doc_num": {"title": "Doc num", "description": "Your animal's ID number (e.g. passport)", "type": "string", "maxLength": 128, "minLength": 1, "x-nullable": true}}}, "MyAnimal": {"required": ["name", "animal"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "user": {"title": "User", "type": "integer", "x-nullable": true}, "name": {"title": "Name", "description": "Your animal's name", "type": "string", "maxLength": 256, "minLength": 1}, "slug": {"title": "Slug", "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$", "readOnly": true, "minLength": 1}, "animal": {"title": "Animal", "description": "Your animal", "type": "integer"}, "photo_list": {"title": "Photo list", "type": "object", "readOnly": true}, "breed": {"title": "Breed", "description": "Name of your animal's breed", "type": "integer", "x-nullable": true}, "birthyear": {"title": "Birthyear", "description": "Your animal's year of birth", "type": "string", "maxLength": 16, "x-nullable": true}, "color": {"title": "Color", "description": "Color of your animal", "type": "integer", "x-nullable": true}, "weight": {"title": "Weight", "description": "Your animal's weight", "type": "string", "enum": ["XS", "S", "M", "L", "XL", "XXL"]}, "sex": {"title": "Sex", "description": "The sex of your animal", "type": "integer", "x-nullable": true}, "height": {"title": "Height", "description": "Your animal's height", "type": "string", "maxLength": 32, "x-nullable": true}, "father": {"title": "Father", "description": "The father of your animal", "type": "string", "maxLength": 128, "x-nullable": true}, "mother": {"title": "Mother", "description": "The mother of your animal", "type": "string", "maxLength": 128, "x-nullable": true}, "doc_num": {"title": "Doc num", "description": "Your animal's ID number (e.g. passport)", "type": "string", "maxLength": 128, "minLength": 1, "x-nullable": true}}}, "NewslettersEmail": {"required": ["email"], "type": "object", "properties": {"email": {"title": "Email", "type": "string", "format": "email", "maxLength": 255, "minLength": 1}, "name": {"title": "Imi\u0119 i Nazwisko", "description": "Name and last name of user in newsletter list", "type": "string", "maxLength": 200, "minLength": 1, "x-nullable": true}}}, "Order": {"required": ["order_no", "user"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "order_no": {"title": "Order no", "type": "string", "maxLength": 64, "minLength": 1}, "user": {"title": "User", "type": "integer"}, "price": {"title": "Price", "description": "Warto\u015b\u0107 zam\u00f3wienia", "type": "string", "format": "decimal"}, "currency": {"title": "Currency", "type": "string", "maxLength": 4, "minLength": 1}, "is_paid": {"title": "Is paid", "type": "boolean"}, "is_finished": {"title": "Is finished", "type": "boolean"}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "shipping_first_name": {"title": "Shipping first name", "type": "string", "maxLength": 64, "minLength": 1}, "shipping_last_name": {"title": "Shipping last name", "type": "string", "maxLength": 64, "minLength": 1}, "shipping_street": {"title": "Shipping street", "type": "string", "maxLength": 64, "minLength": 1}, "shipping_building": {"title": "Shipping building", "type": "string", "maxLength": 10, "minLength": 1}, "shipping_place": {"title": "Shipping place", "type": "string", "maxLength": 10}, "shipping_city": {"title": "Shipping city", "type": "string", "maxLength": 64, "minLength": 1}, "shipping_zip_code": {"title": "Shipping zip code", "type": "string", "maxLength": 10, "minLength": 1}, "shipping_phone": {"title": "Shipping phone", "type": "string", "maxLength": 64, "minLength": 1}, "shipping_email": {"title": "Shipping email", "type": "string", "format": "email", "maxLength": 254, "minLength": 1, "x-nullable": true}, "shipping_company": {"title": "Shipping company", "type": "string", "maxLength": 64}, "shipping_nip": {"title": "Shipping nip", "type": "string", "maxLength": 64}, "shipping_remarks": {"title": "Shipping remarks", "type": "string", "maxLength": 1200}, "products_by_store": {"title": "Products by store", "type": "string", "readOnly": true}}}, "Xml": {"type": "object", "properties": {"xml": {"title": "Xml", "type": "string", "readOnly": true, "format": "uri"}}}, "ProductProducer": {"required": ["name", "reviews_quantity"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "description": "name of the Products Producer", "type": "string", "maxLength": 200, "minLength": 1}, "slug": {"title": "Slug", "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$", "readOnly": true, "minLength": 1}, "description": {"title": "Description", "description": "Extra description", "type": "string", "maxLength": 2000, "x-nullable": true}, "nip": {"title": "Nip", "type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "x-nullable": true}, "points_from_reviews": {"title": "Points from reviews", "description": "\u015arednia ocena produkt\u00f3w producenta", "type": "string", "format": "decimal"}, "logo": {"title": "Logo", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "url": {"title": "Url", "description": "Url address to the producer", "type": "string", "maxLength": 200, "minLength": 1, "x-nullable": true}, "reviews_quantity": {"title": "Reviews quantity", "type": "integer"}, "brand": {"title": "Brand", "type": "string", "readOnly": true}, "short_url_data": {"title": "Short url data", "type": "string", "readOnly": true}}}, "ProductProducerDeleteOrUpdate": {"required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "description": "name of the Products Producer", "type": "string", "maxLength": 200, "minLength": 1}, "slug": {"title": "Slug", "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$", "readOnly": true, "minLength": 1}, "description": {"title": "Description", "description": "Extra description", "type": "string", "maxLength": 2000, "x-nullable": true}, "nip": {"title": "Nip", "type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "x-nullable": true}, "logo": {"title": "Logo", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "url": {"title": "Url", "description": "Url address to the producer", "type": "string", "maxLength": 200, "minLength": 1, "x-nullable": true}}}, "ProductProducerReviewCreate": {"required": ["review"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "review": {"title": "Review", "description": "Review content", "type": "string", "minLength": 1}, "number_of_points": {"title": "Number of points", "description": "Review rate points", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "user": {"title": "User", "type": "integer", "readOnly": true}, "producer": {"title": "Producer", "type": "integer", "readOnly": true}}}, "ProductProducerReview": {"required": ["review", "user", "user_first_name", "user_last_name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "review": {"title": "Review", "description": "Review content", "type": "string", "minLength": 1}, "number_of_points": {"title": "Number of points", "description": "Review rate points", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "review_status": {"title": "Review status", "description": "Review status", "type": "string", "enum": ["shown", "hidden"]}, "user": {"title": "User", "type": "string", "minLength": 1}, "user_first_name": {"title": "User first name", "type": "string", "minLength": 1}, "user_last_name": {"title": "User last name", "type": "string", "minLength": 1}, "producer": {"title": "Producer", "description": "Producer review", "type": "integer", "x-nullable": true}, "answer_for": {"title": "Answer for", "type": "string", "x-nullable": true}}}, "ReportProducerReview": {"required": ["flag_text"], "type": "object", "properties": {"flag_text": {"title": "Flag text", "type": "string", "maxLength": 300, "minLength": 1}}}, "AddProductToCart": {"required": ["product", "cart"], "type": "object", "properties": {"product": {"title": "Product", "type": "integer"}, "cart": {"title": "Cart", "type": "integer"}, "quantity": {"title": "Quantity", "description": "Ilo\u015b\u0107 produktu w koszyku", "type": "string", "format": "decimal"}}}, "DeleteProductInCart": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "product_name": {"title": "Product name", "type": "string", "readOnly": true, "minLength": 1}, "product_in_store": {"title": "Product in store", "type": "integer", "readOnly": true}, "price": {"title": "Price", "type": "string", "format": "decimal", "readOnly": true}, "currency": {"title": "Currency", "type": "string", "readOnly": true, "minLength": 1}, "quantity": {"title": "Quantity", "description": "Ilo\u015b\u0107 produktu w koszyku", "type": "string", "format": "decimal"}}}, "ProductInCartQuantity": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "product_name": {"title": "Product name", "type": "string", "readOnly": true, "minLength": 1}, "product_in_store": {"title": "Product in store", "type": "integer", "readOnly": true}, "price": {"title": "Price", "type": "string", "format": "decimal", "readOnly": true}, "currency": {"title": "Currency", "type": "string", "readOnly": true, "minLength": 1}, "quantity": {"title": "Quantity", "description": "Ilo\u015b\u0107 produktu w koszyku", "type": "string", "format": "decimal"}}}, "ProductCreate": {"required": ["name", "product_category", "product_producer", "unique_id", "type_of_unique_id"], "type": "object", "properties": {"name": {"title": "Name", "description": "Name of the product", "type": "string", "maxLength": 200, "minLength": 1}, "description": {"title": "Description", "description": "Extra description", "type": "string", "x-nullable": true}, "product_category": {"description": "Id's of the categories that product belongs to", "type": "array", "items": {"description": "Id's of the categories that product belongs to", "type": "integer"}, "uniqueItems": true}, "product_producer": {"title": "Product producer", "description": "Id of the product producer", "type": "integer"}, "brand": {"title": "Brand", "description": "Id of the product brand", "type": "integer", "x-nullable": true}, "unique_id": {"title": "Unique id", "description": "Unique id (EAN code)", "type": "string", "maxLength": 256, "minLength": 1}, "type_of_unique_id": {"title": "Type of unique id", "description": "type of unique id", "type": "string", "maxLength": 64, "minLength": 1}}}, "ProductImageCreate": {"type": "object", "properties": {"url": {"title": "Url", "type": "string", "maxLength": 200, "x-nullable": true}, "filename": {"title": "Filename", "description": "File with product image", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}}}, "ProductInStoreCreate": {"required": ["product", "store", "currency", "url", "product_images"], "type": "object", "properties": {"creator": {"title": "Creator", "type": "string", "readOnly": true}, "product": {"$ref": "#/definitions/ProductCreate"}, "store": {"title": "Store", "description": "Id of the store that sells product", "type": "integer"}, "price": {"title": "Price", "description": "Price in store", "type": "string", "format": "decimal"}, "old_price": {"title": "Old price", "description": "Old price in store (for discounts)", "type": "string", "format": "decimal"}, "currency": {"title": "Currency", "type": "string", "maxLength": 4, "minLength": 1}, "url": {"title": "Url", "description": "Url address to the product in store", "type": "string", "maxLength": 200, "minLength": 1}, "product_images": {"type": "array", "items": {"$ref": "#/definitions/ProductImageCreate"}}}}, "ProductInStoreDeleteOrUpdate": {"required": ["currency", "url", "product", "store"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "slug": {"title": "Slug", "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$", "readOnly": true, "minLength": 1}, "price": {"title": "Price", "description": "Price in store", "type": "string", "format": "decimal"}, "old_price": {"title": "Old price", "description": "Old price in store (for discounts)", "type": "string", "format": "decimal"}, "discount": {"title": "Discount", "description": "Discount", "type": "string", "maxLength": 10}, "currency": {"title": "Currency", "type": "string", "maxLength": 4, "minLength": 1}, "url": {"title": "Url", "description": "Url address to the product in store", "type": "string", "maxLength": 200, "minLength": 1}, "times_bought": {"title": "Times bought", "description": "Number of times product has been bought", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time"}, "product": {"title": "Product", "description": "Name of the product listed in marketplace", "type": "integer"}, "store": {"title": "Store", "description": "Id of the store that sells product", "type": "integer"}, "short_url": {"title": "Short url", "type": "integer", "x-nullable": true}}}, "ProductReviewCreate": {"required": ["review"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "review": {"title": "Review", "description": "Review content", "type": "string", "minLength": 1}, "number_of_points": {"title": "Number of points", "description": "Review rate points", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "user": {"title": "User", "type": "integer", "readOnly": true}, "product": {"title": "Product", "type": "integer", "readOnly": true}}}, "Like": {"type": "object", "properties": {"user": {"title": "User", "type": "integer", "readOnly": true}, "product": {"title": "Product", "type": "integer", "readOnly": true}}}, "ProductReview": {"required": ["review", "user", "user_first_name", "user_last_name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "review": {"title": "Review", "description": "Review content", "type": "string", "minLength": 1}, "number_of_points": {"title": "Number of points", "description": "Review rate points", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "review_status": {"title": "Review status", "description": "Review status", "type": "string", "enum": ["shown", "hidden"]}, "user": {"title": "User", "type": "string", "minLength": 1}, "user_first_name": {"title": "User first name", "type": "string", "minLength": 1}, "user_last_name": {"title": "User last name", "type": "string", "minLength": 1}, "answer_for": {"title": "Answer for", "type": "string", "x-nullable": true}}}, "ReportProductReview": {"required": ["flag_text"], "type": "object", "properties": {"flag_text": {"title": "Flag text", "type": "string", "maxLength": 300, "minLength": 1}}}, "TagProduct": {"required": ["tags"], "type": "object", "properties": {"tags": {"title": "Tags", "type": "string"}}}, "Questions": {"required": ["user", "animal", "question_subject"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "answer_count": {"title": "Answer count", "type": "integer", "readOnly": true}, "user": {"title": "User", "type": "string", "minLength": 1}, "animal": {"title": "Animal", "type": "string", "minLength": 1}, "animal_slug": {"title": "Animal slug", "type": "string", "readOnly": true, "minLength": 1}, "user_slug": {"title": "User slug", "type": "string", "readOnly": true, "minLength": 1}, "question_subject": {"title": "Question subject", "type": "string", "minLength": 1}, "question_text": {"title": "Question text", "type": "string", "x-nullable": true}, "slug": {"title": "Slug", "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$", "readOnly": true, "minLength": 1}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time"}, "moderate_status": {"title": "Moderate status", "type": "boolean"}}}, "QuestionDetail": {"required": ["user", "animal", "question_subject"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "user": {"title": "User", "type": "string", "minLength": 1}, "animal": {"title": "Animal", "type": "string", "minLength": 1}, "animal_slug": {"title": "Animal slug", "type": "string", "readOnly": true, "minLength": 1}, "user_slug": {"title": "User slug", "type": "string", "readOnly": true, "minLength": 1}, "question_subject": {"title": "Question subject", "type": "string", "minLength": 1}, "question_text": {"title": "Question text", "type": "string", "x-nullable": true}, "slug": {"title": "Slug", "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$", "readOnly": true, "minLength": 1}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time"}, "moderate_status": {"title": "Moderate status", "type": "boolean"}}}, "CreateUser": {"required": ["email", "password", "first_name", "last_name"], "type": "object", "properties": {"email": {"title": "Email", "type": "string", "format": "email", "maxLength": 254, "minLength": 1}, "password": {"title": "Password", "type": "string", "minLength": 1}, "first_name": {"title": "First name", "type": "string", "maxLength": 50, "minLength": 1, "x-nullable": true}, "last_name": {"title": "Last name", "type": "string", "maxLength": 50, "minLength": 1, "x-nullable": true}, "slug": {"title": "Slug", "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$", "readOnly": true, "minLength": 1}}}, "CreateExpertUser": {"required": ["email", "password", "first_name", "last_name", "specializations"], "type": "object", "properties": {"email": {"title": "Email", "type": "string", "format": "email", "maxLength": 254, "minLength": 1}, "password": {"title": "Has\u0142o", "type": "string", "maxLength": 128, "minLength": 1}, "first_name": {"title": "First name", "type": "string", "maxLength": 50, "minLength": 1, "x-nullable": true}, "last_name": {"title": "Last name", "type": "string", "maxLength": 50, "minLength": 1, "x-nullable": true}, "slug": {"title": "Slug", "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$", "readOnly": true, "minLength": 1}, "specializations": {"type": "array", "items": {"type": "string", "x-nullable": true}}}}, "ResetPassword": {"required": ["email"], "type": "object", "properties": {"email": {"title": "Email", "type": "string", "format": "email", "maxLength": 254, "minLength": 1}}}, "CreateNewpassword": {"required": ["password", "password2"], "type": "object", "properties": {"password": {"title": "Password", "type": "string", "minLength": 1}, "password2": {"title": "Password2", "type": "string", "minLength": 1}}}, "ShoppingCart": {"required": ["user"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "user": {"title": "User", "type": "integer"}, "price": {"title": "Price", "description": "Total shopping cart price", "type": "string", "format": "decimal"}, "currency": {"title": "Currency", "type": "string", "maxLength": 4, "minLength": 1}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time"}, "products_by_store": {"title": "Products by store", "type": "string", "readOnly": true}}}, "Specialist": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "entity_name": {"title": "Entity name", "description": "Specialist name", "type": "string", "maxLength": 200, "minLength": 1, "x-nullable": true}, "slug": {"title": "Slug", "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$", "readOnly": true, "minLength": 1}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time"}, "entity_category": {"description": "Id's of the category in which specializes", "type": "array", "items": {"description": "Id's of the category in which specializes", "type": "integer"}, "uniqueItems": true}, "entity_animal": {"description": "Id's of the animals in which specializes", "type": "array", "items": {"description": "Id's of the animals in which specializes", "type": "integer"}, "uniqueItems": true}, "entity_email": {"title": "Entity email", "type": "string", "format": "email", "maxLength": 64, "minLength": 1, "x-nullable": true}, "entity_address": {"title": "Entity address", "type": "string", "maxLength": 64, "minLength": 1, "x-nullable": true}, "entity_city": {"title": "Entity city", "type": "integer", "x-nullable": true}, "entity_service": {"description": "Id's of the services offered", "type": "array", "items": {"description": "Id's of the services offered", "type": "integer"}, "readOnly": true, "uniqueItems": true}, "entity_zip_code": {"title": "Entity zip code", "type": "string", "maxLength": 10, "minLength": 1, "x-nullable": true}, "entity_description": {"title": "Entity description", "description": "Extra description of the specialist", "type": "string", "maxLength": 2000, "x-nullable": true}, "entity_phone": {"title": "Entity phone", "type": "string", "maxLength": 64, "x-nullable": true}, "entity_nip": {"title": "Entity nip", "type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "x-nullable": true}, "points_from_reviews": {"title": "Points from reviews", "description": "Average rating of the object", "type": "string", "format": "decimal"}, "logo": {"title": "Logo", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "payment_method_cards": {"title": "Payment method cards", "type": "boolean"}, "payment_method_cash": {"title": "Payment method cash", "type": "boolean"}, "payment_method_blik": {"title": "Payment method blik", "type": "boolean"}, "payment_method_wire": {"title": "Payment method wire", "type": "boolean"}, "payment_method_installments": {"title": "Payment method installments", "type": "boolean"}, "creator": {"title": "Creator", "type": "integer", "x-nullable": true}, "lat": {"title": "Lat", "description": "Latitude", "type": "string", "format": "decimal", "x-nullable": true}, "lng": {"title": "Lng", "description": "Longitude", "type": "string", "format": "decimal", "x-nullable": true}, "img_map": {"title": "Img map", "type": "string", "readOnly": true, "format": "uri"}, "reviews_quantity": {"title": "Reviews quantity", "type": "integer"}}}, "EntityMemberCreate": {"required": ["specialization", "first_name", "email"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "avatar": {"title": "Avatar", "type": "string", "readOnly": true, "format": "uri"}, "entity": {"title": "Entity", "type": "integer", "readOnly": true}, "specialization": {"type": "array", "items": {"type": "integer"}, "uniqueItems": true}, "first_name": {"title": "Imi\u0119", "type": "string", "maxLength": 100, "minLength": 1, "x-nullable": true}, "description": {"title": "Opis", "type": "string", "maxLength": 500, "minLength": 1, "x-nullable": true}, "phone": {"title": "Tw\u00f3j numer telefonu", "type": "string", "maxLength": 20}, "email": {"title": "Email", "type": "string", "maxLength": 250, "minLength": 1, "x-nullable": true}, "is_admin": {"title": "Is admin", "type": "boolean"}}}, "SpecialistReviewCreate": {"required": ["review"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "review": {"title": "Review", "description": "Review content", "type": "string", "minLength": 1}, "number_of_points": {"title": "Number of points", "description": "Review rate points", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "user": {"title": "User", "type": "integer", "readOnly": true}, "entity": {"title": "Entity", "type": "integer", "readOnly": true}}}, "Service": {"required": ["id"], "type": "object", "properties": {"id": {"title": "Id", "type": "integer"}, "slug": {"title": "Slug", "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$", "readOnly": true, "minLength": 1}}}, "SpecialistServices": {"required": ["entity_service"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "slug": {"title": "Slug", "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$", "readOnly": true, "minLength": 1}, "entity_service": {"type": "array", "items": {"$ref": "#/definitions/Service"}}}}, "ReportSpecialist": {"required": ["flag_text"], "type": "object", "properties": {"flag_text": {"title": "Flag text", "type": "string", "maxLength": 300, "minLength": 1}}}, "SpecialistReview": {"required": ["review", "user_first_name", "user_last_name", "user"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "review": {"title": "Review", "description": "Review content", "type": "string", "minLength": 1}, "number_of_points": {"title": "Number of points", "description": "Review rate points", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "review_status": {"title": "Review status", "description": "Review status", "type": "string", "enum": ["shown", "hidden"]}, "user_first_name": {"title": "User first name", "type": "string", "minLength": 1}, "user_last_name": {"title": "User last name", "type": "string", "minLength": 1}, "user": {"title": "User", "type": "string", "minLength": 1}, "entity": {"title": "Entity", "type": "integer", "x-nullable": true}, "answer_for": {"title": "Answer for", "type": "string", "x-nullable": true}}}, "SpecialistReviewDetail": {"required": ["user", "user_first_name", "user_last_name", "review"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "user": {"title": "User", "type": "string", "minLength": 1}, "user_first_name": {"title": "User first name", "type": "string", "minLength": 1}, "user_last_name": {"title": "User last name", "type": "string", "minLength": 1}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time"}, "review": {"title": "Review", "description": "Review content", "type": "string", "minLength": 1}, "number_of_points": {"title": "Number of points", "description": "Review rate points", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "review_status": {"title": "Review status", "description": "Review status", "type": "string", "enum": ["shown", "hidden"]}, "entity": {"title": "Entity", "type": "integer", "x-nullable": true}, "answer_for": {"title": "Answer for", "type": "string", "x-nullable": true}}}, "SpecialistReportReview": {"required": ["flag_text"], "type": "object", "properties": {"flag_text": {"title": "Flag text", "type": "string", "maxLength": 300, "minLength": 1}}}, "EntityCreate": {"required": ["entity_name", "entity_category", "entity_animal", "entity_email", "entity_address", "entity_city", "entity_service", "entity_zip_code"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "entity_name": {"title": "Entity name", "description": "Specialist name", "type": "string", "maxLength": 200, "minLength": 1, "x-nullable": true}, "slug": {"title": "Slug", "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$", "readOnly": true, "minLength": 1}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time"}, "entity_category": {"type": "array", "items": {"type": "integer"}, "uniqueItems": true}, "entity_animal": {"type": "array", "items": {"type": "integer"}, "uniqueItems": true}, "entity_email": {"title": "Entity email", "type": "string", "format": "email", "maxLength": 64, "minLength": 1, "x-nullable": true}, "entity_address": {"title": "Entity address", "type": "string", "maxLength": 64, "minLength": 1, "x-nullable": true}, "entity_city": {"title": "Entity city", "type": "integer", "x-nullable": true}, "entity_service": {"type": "array", "items": {"type": "integer"}, "uniqueItems": true}, "entity_zip_code": {"title": "Entity zip code", "type": "string", "maxLength": 10, "minLength": 1, "x-nullable": true}, "entity_description": {"title": "Entity description", "description": "Extra description of the specialist", "type": "string", "maxLength": 2000, "x-nullable": true}, "entity_phone": {"title": "Entity phone", "type": "string", "maxLength": 64, "x-nullable": true}, "entity_nip": {"title": "Entity nip", "type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "x-nullable": true}, "points_from_reviews": {"title": "Points from reviews", "description": "Average rating of the object", "type": "string", "format": "decimal"}, "logo": {"title": "Logo", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "payment_method_cards": {"title": "Payment method cards", "type": "boolean"}, "payment_method_cash": {"title": "Payment method cash", "type": "boolean"}, "payment_method_blik": {"title": "Payment method blik", "type": "boolean"}, "payment_method_wire": {"title": "Payment method wire", "type": "boolean"}, "payment_method_installments": {"title": "Payment method installments", "type": "boolean"}, "creator": {"title": "Creator", "type": "integer", "readOnly": true}, "lat": {"title": "Lat", "description": "Latitude", "type": "string", "format": "decimal", "x-nullable": true}, "lng": {"title": "Lng", "description": "Longitude", "type": "string", "format": "decimal", "x-nullable": true}, "img_map": {"title": "Img map", "type": "string", "readOnly": true, "format": "uri"}}}, "EntityAnimal": {"required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "description": "Animal species name", "type": "string", "maxLength": 100, "minLength": 1}, "slug": {"title": "Slug", "description": "Animal species slug", "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$", "readOnly": true, "minLength": 1}, "created_at": {"title": "Created at", "description": "Creation date", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "description": "Update date", "type": "string", "format": "date-time"}, "singular_name": {"title": "Animal species name in singular form", "description": "Animal species name in singular form", "type": "string", "maxLength": 100, "x-nullable": true}}}, "EntityService": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "animal": {"$ref": "#/definitions/EntityAnimal"}, "service_name": {"title": "Service name", "type": "string", "maxLength": 256, "minLength": 1, "x-nullable": true}, "slug": {"title": "Slug", "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$", "readOnly": true, "minLength": 1}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time"}}}, "Store": {"required": ["name", "reviews_quantity"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "description": "Name of the store", "type": "string", "maxLength": 200, "minLength": 1}, "slug": {"title": "Slug", "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$", "readOnly": true, "minLength": 1}, "logo": {"title": "Logo", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "address": {"title": "Address", "type": "string", "maxLength": 64, "minLength": 1, "x-nullable": true}, "city": {"title": "City", "type": "string", "readOnly": true}, "zip_code": {"title": "Zip code", "type": "string", "maxLength": 10, "minLength": 1, "x-nullable": true}, "phone": {"title": "Phone", "type": "string", "maxLength": 64, "minLength": 1, "x-nullable": true}, "email": {"title": "Email", "type": "string", "format": "email", "maxLength": 64, "minLength": 1, "x-nullable": true}, "url": {"title": "Url", "description": "Url address to the store", "type": "string", "maxLength": 200, "minLength": 1, "x-nullable": true}, "description": {"title": "Description", "type": "string", "maxLength": 2000, "x-nullable": true}, "points_from_reviews": {"title": "Points from reviews", "description": "Average store rating", "type": "string", "format": "decimal"}, "reviews_quantity": {"title": "Reviews quantity", "type": "integer"}, "short_url": {"title": "Short url", "type": "string", "readOnly": true}}}, "StoreDeleteOrUpdate": {"required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "description": "Name of the store", "type": "string", "maxLength": 200, "minLength": 1}, "slug": {"title": "Slug", "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$", "readOnly": true, "minLength": 1}, "logo": {"title": "Logo", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "address": {"title": "Address", "type": "string", "maxLength": 64, "minLength": 1, "x-nullable": true}, "city": {"title": "City", "type": "integer", "x-nullable": true}, "zip_code": {"title": "Zip code", "type": "string", "maxLength": 10, "minLength": 1, "x-nullable": true}, "phone": {"title": "Phone", "type": "string", "maxLength": 64, "minLength": 1, "x-nullable": true}, "email": {"title": "Email", "type": "string", "format": "email", "maxLength": 64, "minLength": 1, "x-nullable": true}, "url": {"title": "Url", "description": "Url address to the store", "type": "string", "maxLength": 200, "minLength": 1, "x-nullable": true}, "description": {"title": "Description", "type": "string", "maxLength": 2000, "x-nullable": true}}}, "StoreReviewCreate": {"required": ["review"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "review": {"title": "Review", "description": "Review content", "type": "string", "minLength": 1}, "number_of_points": {"title": "Number of points", "description": "Review rate points", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "user": {"title": "User", "type": "integer", "readOnly": true}, "store": {"title": "Store", "type": "integer", "readOnly": true}}}, "StoreReview": {"required": ["review", "user", "user_first_name", "user_last_name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "review": {"title": "Review", "description": "Review content", "type": "string", "minLength": 1}, "number_of_points": {"title": "Number of points", "description": "Review rate points", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "review_status": {"title": "Review status", "description": "Review status", "type": "string", "enum": ["shown", "hidden"]}, "user": {"title": "User", "type": "string", "minLength": 1}, "user_first_name": {"title": "User first name", "type": "string", "minLength": 1}, "user_last_name": {"title": "User last name", "type": "string", "minLength": 1}, "store": {"title": "Store", "description": "Store review", "type": "integer", "x-nullable": true}, "answer_for": {"title": "Answer for", "type": "string", "x-nullable": true}}}, "ReportStoreReview": {"required": ["flag_text"], "type": "object", "properties": {"flag_text": {"title": "Flag text", "type": "string", "maxLength": 300, "minLength": 1}}}, "Login": {"required": ["username", "password"], "type": "object", "properties": {"username": {"title": "Username", "type": "string", "minLength": 1}, "password": {"title": "Password", "type": "string", "minLength": 1}}}, "TokenRefresh": {"required": ["refresh"], "type": "object", "properties": {"refresh": {"title": "Refresh", "type": "string", "minLength": 1}, "access": {"title": "Access", "type": "string", "readOnly": true}}}, "AnswerExperts": {"type": "object", "properties": {"first_name": {"title": "First name", "type": "string", "maxLength": 50, "minLength": 1, "x-nullable": true}, "last_name": {"title": "Last name", "type": "string", "maxLength": 50, "minLength": 1, "x-nullable": true}, "number_of_points": {"title": "Number of points", "description": "User points", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "slug": {"title": "Slug", "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$", "readOnly": true, "minLength": 1}}}, "Logout": {"required": ["refres_token"], "type": "object", "properties": {"refres_token": {"title": "Refres token", "type": "string", "minLength": 1}}}, "User": {"required": ["email"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "username": {"title": "U\u017cytkownik", "description": "Wymagana. 150 lub mniej znak\u00f3w. Jedynie litery, cyfry i @/./+/-/_.", "type": "string", "readOnly": true, "minLength": 1}, "slug": {"title": "Slug", "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$", "readOnly": true, "minLength": 1}, "email": {"title": "Email", "type": "string", "format": "email", "maxLength": 254, "minLength": 1}, "sex": {"title": "Sex", "type": "string", "maxLength": 128, "x-nullable": true}, "first_name": {"title": "First name", "type": "string", "maxLength": 50, "minLength": 1, "x-nullable": true}, "last_name": {"title": "Last name", "type": "string", "maxLength": 50, "minLength": 1, "x-nullable": true}, "location": {"title": "Location", "description": "User city", "type": "integer", "x-nullable": true}, "badges": {"description": "User badges", "type": "array", "items": {"description": "User badges", "type": "integer"}, "readOnly": true, "uniqueItems": true}, "facebook_profile": {"title": "Facebook profile", "type": "string", "maxLength": 128, "x-nullable": true}, "instagram_profile": {"title": "Instagram profile", "type": "string", "maxLength": 128, "x-nullable": true}, "twitter_profile": {"title": "Twitter profile", "type": "string", "maxLength": 128, "x-nullable": true}, "number_of_points": {"title": "Number of points", "description": "User points", "type": "integer", "readOnly": true}, "avatar": {"title": "Avatar", "type": "object", "readOnly": true}, "date_joined": {"title": "Data przy\u0142\u0105czenia", "type": "string", "format": "date-time"}, "my_animals": {"title": "My animals", "type": "string", "readOnly": true}, "member": {"title": "Member", "type": "string", "readOnly": true}, "entity": {"title": "Entity", "type": "string", "readOnly": true}, "entity_visited": {"title": "Entity visited", "type": "string", "readOnly": true}, "questions": {"title": "Questions", "type": "string", "readOnly": true}, "questions_answers_number": {"title": "Questions answers number", "type": "string", "readOnly": true}, "flag_notifications": {"title": "Flag notifications", "type": "boolean"}, "questions_answers_notifications": {"title": "Questions answers notifications", "type": "boolean"}, "comments_notifications": {"title": "Comments notifications", "type": "boolean"}, "is_dev": {"title": "Is dev", "description": "Is developer flag", "type": "boolean"}}}, "ChangeAvatar": {"type": "object", "properties": {"image": {"title": "Image", "type": "string", "readOnly": true, "format": "uri"}}}, "ProductsLiked": {"required": ["product", "store", "currency", "url"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "product": {"title": "Product", "type": "string", "minLength": 1}, "store": {"title": "Store", "description": "Id of the store that sells product", "type": "integer"}, "price": {"title": "Price", "description": "Price in store", "type": "string", "format": "decimal"}, "old_price": {"title": "Old price", "description": "Old price in store (for discounts)", "type": "string", "format": "decimal"}, "discount": {"title": "Discount", "description": "Discount", "type": "string", "maxLength": 10}, "currency": {"title": "Currency", "type": "string", "maxLength": 4, "minLength": 1}, "url": {"title": "Url", "description": "Url address to the product in store", "type": "string", "maxLength": 200, "minLength": 1}}}, "UserNotifications": {"type": "object", "properties": {"flag_notifications": {"title": "Flag notifications", "type": "boolean"}, "questions_answers_notifications": {"title": "Questions answers notifications", "type": "boolean"}, "comments_notifications": {"title": "Comments notifications", "type": "boolean"}}}, "ChangePassword": {"required": ["new_password", "old_password"], "type": "object", "properties": {"new_password": {"title": "New password", "type": "string", "minLength": 1}, "old_password": {"title": "Old password", "type": "string", "minLength": 1}}}}}